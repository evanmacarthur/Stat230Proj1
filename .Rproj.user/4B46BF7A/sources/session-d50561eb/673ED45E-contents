---
title: "STAT230 Work Team Project: Proposal & EDA"
author: "Work Team 7: Evan, Becca, Laith"
date: "due Thursday, October 12th"
output: 
  pdf_document:
    fig_height: 3
    fig_width: 5
---

```{r include=FALSE}
# Don't delete this chunk if you are using the mosaic package
# This loads the mosaic and mosaicData packages
library(mosaic)
library(car)
library(httr)
library(tidyverse)
library(dplyr)
library(tigris)
library(GGally)
library(readr)
library(janitor)
```

```{r include=FALSE}
# Some customization.  You can alter or delete as desired (if you know what you are doing).
# knitr settings to control how R chunks work.
require(knitr)
opts_chunk$set(
  tidy=FALSE,     # display code as typed
  size="small"    # slightly smaller font for code
)
trellis.par.set(theme=theme.mosaic())  
options(digits=5)

theme_set(theme_bw())
options(warn=-1)
```



## Introduction & Motivation  

We are interested in how we can attempt to predict the profitability of farming by different farming practices. Specifically we are curious about sustainable agriculture decisions and decisions about crop types. From a conservationist perspective, it is important that sustainable choices are economically viable for farmers. 

https://www.nass.usda.gov/AgCensus/


Our data is sourced from the United States Census of Agriculture, between the years 2009 and 2017, along with county demographic information from Wikipedia, sourced from the U.S Census. 

Our response variable in reported farm income, and we are planning to predict it with a number of variables (pop_density, farm acres, bee colonies, grazing rotation, fertilizer use)


## Dataset & Wrangling   

On RStudio, be sure to save your dataset file in *the SAME folder* you saved this RMD file. I would strongly suggest that you create a specific folder on RStudio for this Project. When you wrangle your data, keep in mind that it's usually safer to save the mutated/filtered dataset as a *new* dataset.     


```{r import data select columsn and calculate}
## wrangle!!  
df0 <- read_csv("gooddata.csv")
df0 <- df0 |> 
  clean_names()

df <- df0 |> 
  select(c(farm_income_1, fertilizer_use, grazing_rotation, bee_colonies, population, county_acreage_2000, farm_acres))

df1 <- df |> 
  mutate(pop_dens = population/county_acreage_2000)

```


## Exploratory Data Analysis (EDA)

Explore distributions and associations graphically and numerically.

```{r ggpairs, message=FALSE}
ggpairs(df1, columns = 1:8, progress = FALSE)
#looks like farm income could maybe use a transformation to improve linearity. 
```
> There are significant correlations with all variables, but the linearity looks pretty bad, will try some transformations. 

```{r farm income}
gf_histogram(~farm_income_1, data=df1)

favstats(~farm_income_1, data=df1)
```
>The mean is 46841, the median is 27146, we can also tell it looks right skewed from the histogram, and the IQR is 61407

```{r fixing farm income}
df2 <- df1 |> 
  mutate(farm_income_2 = log(farm_income_1+55152))

#we had one value that was very low because it was by far the smallest, even after we transposed the data. 
df2 <- df2 |> 
  filter(farm_income_2 > 5)
gf_histogram(~farm_income_2, data=df2)

favstats(~farm_income_2, data=df2)
```
>Looks much improved, the mean is 11.4, and median is 11.318, and the histogram still is not ideal, but better. The IQR = 0.699



```{r ggpairs with transformed farm income, fig.height=6, fig.width=6}
ggpairs(df2, columns = 1:8, progress = FALSE)
```

>This improved linearity slightly, but still questionable, lets look at predictors. 



```{r fertilizer use}
gf_point(data = df2, farm_income_2 ~ fertilizer_use) |> 
  gf_lm()
gf_histogram(~fertilizer_use, data=df2)

favstats(~fertilizer_use, data=df2)

#fertilizer use is super right skewed and not linear w/ farm income, so trying a transformation
```
>This does not look great, heavily skewed distribution and it is difficult to assess the scatterplot, the mean is 7664465, the median is 3679500, and the IQR is 9724500. Will try transforming. 

```{r transformed fertilizer}
df3 <- df2 |> 
  mutate(fertilizer_use_2 = sqrt(fertilizer_use))

gf_point(data = df3, farm_income_2 ~ fertilizer_use_2) |> 
  gf_lm()
gf_histogram(~fertilizer_use_2, data=df3)

favstats(~fertilizer_use_2, data=df3)

```
>Once again, this improves how the data looks. The distribution is still somewhat right skewed, with a mean of 2260.6	and a median of 1918.2, and an IQR of 2268.9, but this is an improvement, but linearity looks better based on the scatterplot. 


```{r population density}
gf_point(data = df3, farm_income_2 ~ pop_dens) |> 
  gf_lm()
gf_histogram(~pop_dens, data=df3)

favstats(~pop_dens, data=df3)

#population density is super right skewed and not linear w/ farm income, so trying a transformation
```
> This one is also not great, scatterplot not very useful, the histogram is right skewed, the mean is 0.29915 and median is 0.064434, and the IQR is 0.14179.  


```{r population density transform}
df3 <- df3 |> 
  mutate(pop_dens_2 = log(pop_dens+1))
#again looks a lot better

#looks like we still have a value that is inf because there is somehow 0 acres in the county, just going to remove this row

df3 <- df3 |> 
  filter(!is.infinite(pop_dens_2))

gf_histogram(data = df3, ~ pop_dens_2, bins = 100)

gf_point(data = df3, farm_income_2 ~ pop_dens_2) |> 
  gf_lm()

favstats(~pop_dens_2, data=df3)
```
>This one still does not look great after transforming, but it probably helped. The graph is still right skewed, but not as strongly, with a mean of 0.16482 and a median of 0.062443, and IQR of 0.1296, and the relationship based on the scatter plot is not very useful. 



```{r farm acres}
gf_point(data = df3, farm_income_2 ~ farm_acres) |> 
  gf_lm()
gf_histogram(data = df3, ~ farm_acres)
favstats(~farm_acres, data=df3)

#farm acres is super right skewed and not linear w/ farm income, so trying a transformation
```

>Once again, unhelpful scatterplot, right skewed distribution, mean of 291893, median of 179306	and IQR of 282196

```{r farm acres transform}
df3 <- df3 |> 
  mutate(farm_acres_2 = sqrt(farm_acres))

gf_point(data = df3, farm_income_2 ~ farm_acres_2) |> 
  gf_lm()
gf_histogram(data = df3, ~ farm_acres_2)
favstats(~farm_acres_2, data=df3)
#looks better, but still pretty questionable
```
>This transformation improved it somewhat, the histogram is less right skewed, but the relationship does not look very linear based on the scatter plot, the mean is 468.11 and the median is 423.45, and the IQR is 321.57



```{r bee colonies}
gf_point(data = df3, farm_income_2 ~ bee_colonies) |> 
  gf_lm()
gf_histogram(data = df3, ~ bee_colonies)
favstats(~bee_colonies, data=df3)

#bee colonies is super right skewed and not linear w/ farm income, so trying a transformation
#again, much improved
```
> Very strongly right skewed histogram, scatterplot is not useful for assessing linearity, the mean is 848.12, the median is 93, and the IQR is 234

```{r bee colonies transform}
df3 <- df3 |> 
  mutate(bee_colonies_2 = log(bee_colonies+1))

gf_point(data = df3, farm_income_2 ~ bee_colonies_2) |> 
  gf_lm()
gf_histogram(data = df3, ~ bee_colonies_2)
favstats(~bee_colonies_2, data=df3)
```
> After transforming the data, the histogram looks somewhat better, the main part of the distribution is very normal, but we have introduced a large number of 0s into the dataset, which represent real values, so probably shouldn't be removed. the mean is 4.1501	the median is 4.5433 and the IQR is 2.4136. The scatter plot similarlly seems to show a fairly linear relationship aside from a large number of 0 values. 



```{r grazing rotation}
gf_point(data = df3, farm_income_2 ~ grazing_rotation) |> 
  gf_lm()
gf_histogram(data = df3, ~ grazing_rotation)
favstats(~grazing_rotation, data=df3)

#looks a little problematic, give something a shot


#looks maybe a little better I guess
```
> Again, a right skewed distribution, and unhelpful scatter plot for assessing linearity. The mean is 87.426, the median is 63, and the IQR is 80. worth trying a transformation. 

```{r grazing rotation transformation}
df3 <- df3 |> 
  mutate(grazing_rotation_2 = log(grazing_rotation))

gf_point(data = df3, farm_income_2 ~ grazing_rotation_2) |> 
  gf_lm()
gf_histogram(data = df3, ~ grazing_rotation_2)
favstats(~grazing_rotation_2, data=df3)
```
>The scatter plot looks about the same, but the histogram looks much less skewed, the mean is 4.0537, the median is 4.1431, and the IQR is 1.2309.

> After we have tried to improve all of the response variables, lets take a look at the ggpairs again

```{r ggpairs again}
df4 <- df3 |> 
  select(c(farm_income_2, farm_acres_2, pop_dens_2, grazing_rotation_2, fertilizer_use_2, bee_colonies_2))
ggpairs(df4, columns = 1:6, progress = FALSE)
```

> These generally look much better, we still have a lot of 0 values in the population density, but they are real, so the data is not actually normally distributed. The scatter plots generally look much more linear than before transforming the variables, and the correlations are similar to before transforming. 
